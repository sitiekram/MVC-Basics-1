// <auto-generated />
using MVC_Basics_1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVC_Basics_1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211202133231_Update the database structure")]
    partial class Updatethedatabasestructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVC_Basics_1.Models.CountryModel", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadOfState")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<float>("SurfaceArea")
                        .HasColumnType("real");

                    b.HasKey("Code");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("MVC_Basics_1.Models.PeopleModel", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            City = "Vänersborg",
                            Email = "ekram234@gmail.com",
                            FullName = "Ekram Ahmedin",
                            PhoneNumber = "0791234567"
                        },
                        new
                        {
                            PersonId = 2,
                            City = "Göteborg",
                            Email = "timsnds241@gmail.com",
                            FullName = "Eve Andersson",
                            PhoneNumber = "+46701297530"
                        },
                        new
                        {
                            PersonId = 3,
                            City = "Vänersborg",
                            Email = "ulf78s3@hotmail.com",
                            FullName = "Ulf David",
                            PhoneNumber = "0752875207"
                        },
                        new
                        {
                            PersonId = 4,
                            City = "Trollhättan",
                            Email = "alimuhammed@gmail.com",
                            FullName = "Ali Muhammed",
                            PhoneNumber = "0796078542"
                        },
                        new
                        {
                            PersonId = 5,
                            City = "Stockholm",
                            Email = "mariaSvensson234@gmail.com",
                            FullName = "Maria Svensson",
                            PhoneNumber = "+46791028376"
                        },
                        new
                        {
                            PersonId = 6,
                            City = "Stockholm",
                            Email = "RahwaSuliman1234@gmail.com",
                            FullName = "Rahwa Suliman",
                            PhoneNumber = "0764933276"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
